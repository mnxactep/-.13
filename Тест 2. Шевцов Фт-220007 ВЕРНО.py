import logging

# настройка логгирования
logging.basicConfig(filename='Тест 2.log', level=logging.INFO, format='%(asctime)s %(levelname)s %(message)s')

# функция для проведения теста
def run_test(questions):
    correct_answers = 0  # счетчик правильных ответов
    total_questions = len(questions)  # общее количество вопросов

    for i, (question, correct_answer) in enumerate(questions, 1):
        print(f"Вопрос {i}: {question}")
        logging.info(f"Вопрос {i}: {question}")

        answer = input("Введите номер правильного ответа: ")

        # проверка корректности введенных данных
        try:
            answer = int(answer)
        except ValueError:
            print("Ошибка: Введите номер из предложенных вариантов")
            logging.error("Ошибка: Введите номер из предложенных вариантов")
            continue

        # проверка, не превышает ли введенный номер количество вариантов ответа
        if answer < 1 or (i != 4 and answer > 4) or (i == 4 and answer > 4):
            print("Ошибка: Введите номер из предложенных вариантов")
            logging.error("Ошибка: Введите номер из предложенных вариантов")
            continue

        if answer == correct_answer:
            print("Правильно!")
            logging.info("Правильно!")
            correct_answers += 1
        else:
            print(f"Неправильно. Правильный ответ: {correct_answer}")
            logging.info(f"Неправильно. Правильный ответ: {correct_answer}")

    # вывод результатов теста
    print(f"Количество правильных ответов: {correct_answers} из {total_questions}")
    logging.info(f"Количество правильных ответов: {correct_answers} из {total_questions}")

    percentage = (correct_answers / total_questions) * 100
    print(f"Оценка качества выполнения теста: {percentage}%")
    logging.info(f"Оценка качества выполнения теста: {percentage}%")


# список вопросов и правильных ответов
questions = [
    ("Критерием качества программы, определяющим соответствие результатов программы ее спецификации, является:\n1. Надежность\n2. Эффективность\n3. Эргономичность\n4. Корректность", 4),
    ("Когда некоторые этапы алгоритма повторяются многократно, алгоритмическая конструкция носит название:\n1. Линейной\n2. Циклической\n3. Ветвления", 2),
    ("Переменная, изменяющая свое значение при каждом вхождении в цикл, называется:\n1. Телом цикла\n2. Параметром цикла\n3. Индексом\n4. Размером", 3),
    ("Понятное и точное предписание исполнителю выполнить конечную последовательность команд, приводящую от исходных данных к искомому результату, называется:\n1. Моделью\n2. Алгоритмом\n3. Системой\n4. Технологией", 2),
    ("Алгоритмом можно назвать:\n1. Описание решения квадратного уравнения\n2. Расписание уроков в колледже\n3. Технический паспорт автомобиля\n4. Список группы в журнале", 1),
    ("Многократно повторяющаяся часть алгоритма называется:\n1. Параметром цикла\n2. Телом цикла\n3. Перебором", 2),
    ("Для понятности текстов программ в имени целых переменных включают приставку:\n1. Sng\n2. Int\n3. Str", 2)
]

# запуск теста
run_test(questions)
